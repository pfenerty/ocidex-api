{
    "swagger": "2.0",
    "info": {
        "description": "OCI metadata API",
        "title": "OCIDex API",
        "contact": {
            "name": "Patrick Fenerty",
            "email": "patrick@fenerty.me"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "basePath": "/",
    "paths": {
        "/image": {
            "post": {
                "description": "Get image manifest and config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Get image metadata for an image reference",
                "parameters": [
                    {
                        "description": "Image Request Query",
                        "name": "ImageRequestQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_pfenerty_ocidex-api_internal_registry-metadata.ImageRequestQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_pfenerty_ocidex-api_internal_registry-metadata.ImageResponseData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Ping the server to check if its running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Ping the server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "github_com_pfenerty_ocidex-api_internal_registry-metadata.ImageRequestQuery": {
            "type": "object",
            "required": [
                "reference"
            ],
            "properties": {
                "architecture": {
                    "description": "Architecture field specifies the CPU architecture, for example\n`amd64` or `ppc64le`.",
                    "type": "string"
                },
                "os": {
                    "description": "OS specifies the operating system, for example `linux` or `windows`.",
                    "type": "string"
                },
                "os.features": {
                    "description": "OSFeatures is an optional field specifying an array of strings,\neach listing a required OS feature (for example on Windows `win32k`).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os.version": {
                    "description": "OSVersion is an optional field specifying the operating system\nversion, for example on Windows `10.0.14393.1066`.",
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "variant": {
                    "description": "Variant is an optional field specifying a variant of the CPU, for\nexample `v7` to specify ARMv7 when architecture is `arm`.",
                    "type": "string"
                }
            }
        },
        "github_com_pfenerty_ocidex-api_internal_registry-metadata.ImageResponseData": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/v1.Image"
                },
                "manifest": {
                    "$ref": "#/definitions/v1.Manifest"
                }
            }
        },
        "v1.Descriptor": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations contains arbitrary metadata relating to the targeted content.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "artifactType": {
                    "description": "ArtifactType is the IANA media type of this artifact.",
                    "type": "string"
                },
                "data": {
                    "description": "Data is an embedding of the targeted content. This is encoded as a base64\nstring when marshalled to JSON (automatically, by encoding/json). If\npresent, Data can be used directly to avoid fetching the targeted content.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "digest": {
                    "description": "Digest is the digest of the targeted content.",
                    "type": "string"
                },
                "mediaType": {
                    "description": "MediaType is the media type of the object this schema refers to.",
                    "type": "string"
                },
                "platform": {
                    "description": "Platform describes the platform which the image in the manifest runs on.\n\nThis should only be used when referring to a manifest.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Platform"
                        }
                    ]
                },
                "size": {
                    "description": "Size specifies the size in bytes of the blob.",
                    "type": "integer"
                },
                "urls": {
                    "description": "URLs specifies a list of URLs from which this object MAY be downloaded",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.History": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author is the author of the build point.",
                    "type": "string"
                },
                "comment": {
                    "description": "Comment is a custom message set when creating the layer.",
                    "type": "string"
                },
                "created": {
                    "description": "Created is the combined date and time at which the layer was created, formatted as defined by RFC 3339, section 5.6.",
                    "type": "string"
                },
                "created_by": {
                    "description": "CreatedBy is the command which created the layer.",
                    "type": "string"
                },
                "empty_layer": {
                    "description": "EmptyLayer is used to mark if the history item created a filesystem diff.",
                    "type": "boolean"
                }
            }
        },
        "v1.Image": {
            "type": "object",
            "properties": {
                "architecture": {
                    "description": "Architecture field specifies the CPU architecture, for example\n`amd64` or `ppc64le`.",
                    "type": "string"
                },
                "author": {
                    "description": "Author defines the name and/or email address of the person or entity which created and is responsible for maintaining the image.",
                    "type": "string"
                },
                "config": {
                    "description": "Config defines the execution parameters which should be used as a base when running a container using the image.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ImageConfig"
                        }
                    ]
                },
                "created": {
                    "description": "Created is the combined date and time at which the image was created, formatted as defined by RFC 3339, section 5.6.",
                    "type": "string"
                },
                "history": {
                    "description": "History describes the history of each layer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.History"
                    }
                },
                "os": {
                    "description": "OS specifies the operating system, for example `linux` or `windows`.",
                    "type": "string"
                },
                "os.features": {
                    "description": "OSFeatures is an optional field specifying an array of strings,\neach listing a required OS feature (for example on Windows `win32k`).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os.version": {
                    "description": "OSVersion is an optional field specifying the operating system\nversion, for example on Windows `10.0.14393.1066`.",
                    "type": "string"
                },
                "rootfs": {
                    "description": "RootFS references the layer content addresses used by the image.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RootFS"
                        }
                    ]
                },
                "variant": {
                    "description": "Variant is an optional field specifying a variant of the CPU, for\nexample `v7` to specify ARMv7 when architecture is `arm`.",
                    "type": "string"
                }
            }
        },
        "v1.ImageConfig": {
            "type": "object",
            "properties": {
                "ArgsEscaped": {
                    "description": "ArgsEscaped\n\nDeprecated: This field is present only for legacy compatibility with\nDocker and should not be used by new image builders.  It is used by Docker\nfor Windows images to indicate that the `Entrypoint` or `Cmd` or both,\ncontains only a single element array, that is a pre-escaped, and combined\ninto a single string `CommandLine`. If `true` the value in `Entrypoint` or\n`Cmd` should be used as-is to avoid double escaping.\nhttps://github.com/opencontainers/image-spec/pull/892",
                    "type": "boolean"
                },
                "Cmd": {
                    "description": "Cmd defines the default arguments to the entrypoint of the container.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Entrypoint": {
                    "description": "Entrypoint defines a list of arguments to use as the command to execute when the container starts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Env": {
                    "description": "Env is a list of environment variables to be used in a container.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ExposedPorts": {
                    "description": "ExposedPorts a set of ports to expose from a container running this image.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "Labels": {
                    "description": "Labels contains arbitrary metadata for the container.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "StopSignal": {
                    "description": "StopSignal contains the system call signal that will be sent to the container to exit.",
                    "type": "string"
                },
                "User": {
                    "description": "User defines the username or UID which the process in the container should run as.",
                    "type": "string"
                },
                "Volumes": {
                    "description": "Volumes is a set of directories describing where the process is likely write data specific to a container instance.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "WorkingDir": {
                    "description": "WorkingDir sets the current working directory of the entrypoint process in the container.",
                    "type": "string"
                }
            }
        },
        "v1.Manifest": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations contains arbitrary metadata for the image manifest.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "artifactType": {
                    "description": "ArtifactType specifies the IANA media type of artifact when the manifest is used for an artifact.",
                    "type": "string"
                },
                "config": {
                    "description": "Config references a configuration object for a container, by digest.\nThe referenced configuration object is a JSON blob that the runtime uses to set up the container.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Descriptor"
                        }
                    ]
                },
                "layers": {
                    "description": "Layers is an indexed list of layers referenced by the manifest.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Descriptor"
                    }
                },
                "mediaType": {
                    "description": "MediaType specifies the type of this document data structure e.g. `application/vnd.oci.image.manifest.v1+json`",
                    "type": "string"
                },
                "schemaVersion": {
                    "description": "SchemaVersion is the image manifest schema that this image follows",
                    "type": "integer"
                },
                "subject": {
                    "description": "Subject is an optional link from the image manifest to another manifest forming an association between the image manifest and the other manifest.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Descriptor"
                        }
                    ]
                }
            }
        },
        "v1.Platform": {
            "type": "object",
            "properties": {
                "architecture": {
                    "description": "Architecture field specifies the CPU architecture, for example\n`amd64` or `ppc64le`.",
                    "type": "string"
                },
                "os": {
                    "description": "OS specifies the operating system, for example `linux` or `windows`.",
                    "type": "string"
                },
                "os.features": {
                    "description": "OSFeatures is an optional field specifying an array of strings,\neach listing a required OS feature (for example on Windows `win32k`).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os.version": {
                    "description": "OSVersion is an optional field specifying the operating system\nversion, for example on Windows `10.0.14393.1066`.",
                    "type": "string"
                },
                "variant": {
                    "description": "Variant is an optional field specifying a variant of the CPU, for\nexample `v7` to specify ARMv7 when architecture is `arm`.",
                    "type": "string"
                }
            }
        },
        "v1.RootFS": {
            "type": "object",
            "properties": {
                "diff_ids": {
                    "description": "DiffIDs is an array of layer content hashes (DiffIDs), in order from bottom-most to top-most.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "Type is the type of the rootfs.",
                    "type": "string"
                }
            }
        }
    }
}